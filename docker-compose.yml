version: "3.9"
services:
    binance:
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        container_name: BINANCE
        volumes:
            - /home/furkan/cryptostore:/cryptostore
        environment:
            - EXCHANGE=BINANCE
            - CHANNELS=l2_book,trades,ticker,candles
            - SYMBOLS=ETH-BTC,LTC-BTC,BNB-BTC,BTC-USDT,ETH-USDT,LINK-BTC,ETC-BTC,TRX-BTC,XRP-BTC,BNB-USDT,ADA-BTC,LTC-USDT,ADA-USDT,XRP-USDT,TRX-USDT,ETC-USDT,BNB-USDC,BTC-USDC,ETH-USDC,XRP-USDC,LINK-USDT,LINK-USDC,LTC-USDC,ADA-USDC,MATIC-BTC,MATIC-USDT,DOGE-BTC,DOGE-USDT,DOGE-USDC,BCH-BTC,BCH-USDT,BCH-USDC,FTT-USDT,SOL-BTC,SOL-USDT,DOT-BTC,DOT-USDT,WBTC-BTC,UNI-BTC,UNI-USDT,AVAX-BTC,AVAX-USDT,SHIB-USDT,SOL-USDC,WBTC-USDT,AVAX-USDC,DOT-USDC,MATIC-USDC,UNI-USDC,SHIB-USDC,WIF-USDC
            - BACKEND=KAFKA
            - DEPTH=100 
            - HOST=redpanda 
            - PORT=19092
    binance_futures:
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        container_name: BINANCE_FUTURES
        volumes:
            - /home/furkan/cryptostore:/cryptostore
        environment:
            - EXCHANGE=BINANCE_FUTURES
            - CHANNELS=l2_book,trades,ticker,candles
            - SYMBOLS=BTC-USDT-PERP,ETH-USDT-PERP,BCH-USDT-PERP,XRP-USDT-PERP,LTC-USDT-PERP,TRX-USDT-PERP,ETC-USDT-PERP,LINK-USDT-PERP,ADA-USDT-PERP,BNB-USDT-PERP,DOGE-USDT-PERP,DOT-USDT-PERP,SOL-USDT-PERP,UNI-USDT-PERP,AVAX-USDT-PERP,MATIC-USDT-PERP,ETH-BTC-PERP,BTC-USDT-24M28,ETH-USDT-24M28,BTC-USDC-PERP,ETH-USDC-PERP,BNB-USDC-PERP,SOL-USDC-PERP,XRP-USDC-PERP,DOGE-USDC-PERP,LINK-USDC-PERP,AVAX-USDC-PERP,BTC-USDT-24U27,ETH-USDT-24U27,BCH-USDC-PERP
            - BACKEND=KAFKA
            - DEPTH=100 
            - HOST=redpanda 
            - PORT=19092
    coinbase:
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        container_name: COINBASE
        volumes:
            - /home/furkan/cryptostore:/cryptostore
        environment:
            - EXCHANGE=COINBASE
            - CHANNELS=l2_book,trades,ticker,candles
            - SYMBOLS=LINK-USD,BTC-USDT,LTC-USD,XRP-BTC,DOT-BTC,XLM-USDT,BCH-USD,SOL-USD,ETH-USD,SHIB-USD,MATIC-BTC,ADA-USDC,ETC-BTC,BTC-USDC,AVAX-BTC,SOL-USDT,SOL-BTC,LINK-BTC,BTC-USD,XLM-BTC,ETH-USDT,MATIC-USDT,AVAX-USDT,DOGE-USDT,UNI-USD,AVAX-USD,DOGE-BTC,XRP-USDT,DOGE-USD,BCH-BTC,LTC-BTC,ADA-BTC,XLM-USD,ADA-USDT,MATIC-USD,UNI-BTC,XRP-USD,ETC-USD,ETH-USDC,SHIB-USDT,DOT-USD,ETH-BTC,ADA-USD,DOT-USDT,LINK-USDT,MASK-EUR
            - BACKEND=KAFKA
            - DEPTH=100 
            - HOST=redpanda 
            - PORT=19092
    kraken:
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        container_name: KRAKEN
        volumes:
            - /home/furkan/cryptostore:/cryptostore
        environment:
            - EXCHANGE=KRAKEN
            - CHANNELS=l2_book,trades,ticker,candles
            - SYMBOLS=ADA-USD,ADA-USDT,ADA-BTC,AVAX-USD,AVAX-USDT,BCH-USD,BCH-USDT,BCH-BTC,DOT-USD,DOT-USDT,DOT-BTC,ETH-USDC,ETH-USDT,LINK-USD,LINK-USDT,LINK-BTC,LTC-USDT,MATIC-USD,MATIC-USDT,MATIC-BTC,SHIB-USD,SHIB-USDT,SOL-USD,SOL-USDT,SOL-BTC,TRX-USD,TRX-BTC,UNI-USD,UNI-BTC,WBTC-USD,WBTC-BTC,BTC-USDC,BTC-USDT,DOGE-USD,DOGE-USDT,ETC-BTC,ETC-USD,ETH-BTC,ETH-USD,LTC-BTC,LTC-USD,XMR-USDT,XRP-USDT,BTC-USD,DOGE-BTC,XLM-BTC,XLM-USD,XMR-BTC,XMR-USD,XRP-BTC,XRP-USD,USD-JPY
            - BACKEND=KAFKA
            - DEPTH=100 
            - HOST=redpanda 
            - PORT=19092
            
    redpanda-0:
        command:
            - redpanda
            - start
            - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
            # Address the broker advertises to clients that connect to the Kafka API.
            # Use the internal addresses to connect to the Redpanda brokers'
            # from inside the same Docker network.
            # Use the external addresses to connect to the Redpanda brokers'
            # from outside the Docker network.
            - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
            - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
            # Address the broker advertises to clients that connect to the HTTP Proxy.
            - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
            - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
            # Redpanda brokers use the RPC API to communicate with each other internally.
            - --rpc-addr redpanda-0:33145
            - --advertise-rpc-addr redpanda-0:33145
            # Mode dev-container uses well-known configuration properties for development in containers.
            - --mode dev-container
            # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
            - --smp 1
            - --default-log-level=info
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.11
        container_name: redpanda-0
        volumes:
            - redpanda-0:/var/lib/redpanda/data
        ports:
            - 18081:18081
            - 18082:18082
            - 19092:19092
            - 19644:9644
    console:
        container_name: redpanda-console
        image: docker.redpanda.com/redpandadata/console:v2.4.5
        entrypoint: /bin/sh
        command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
        environment:
            CONFIG_FILEPATH: /tmp/config.yml
            CONSOLE_CONFIG_FILE: |
                kafka:
                    brokers: ["redpanda-0:9092"]
                    schemaRegistry:
                        enabled: true
                        urls: ["http://redpanda-0:8081"]
                    redpanda:
                        adminApi:
                            enabled: true
                            urls: ["http://redpanda-0:9644"]
        ports:
            - 8080:8080
        depends_on:
            - redpanda-0
            
volumes:
  redpanda-0: null